"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[7528],{3295:(e,t,a)=>{a.r(t),a.d(t,{Marketplace:()=>f,default:()=>x});var r=a(7294),i=a(4774);const s={root:"root__L3D",main:"main_QaR5",logo:"logo_IUyx",cardAction:"cardAction_V_Wl",categoriesList:"categoriesList_mkFp",cardTitle:"cardTitle_YtDb",cardDescription:"cardDescription_t8Jr",card:"card_CRWV",chip:"chip_pwSt",banner:"banner_AfRz",bannerTitle:"bannerTitle_B2EV",preview:"preview_TKov",example:"example_X5Rc",cardComingSoon:"cardComingSoon_vzMw",bottomText:"bottomText_cQoB"},o=[{name:"RabbitMQ",description:"Message broker software that implements the Advanced Message Queuing Protocol (AMQP)",url:"https://github.com/syntasso/promise-rabbitmq",logoUrl:"/img/marketplace/rabbitmq.svg",categories:["Messaging"]},{name:"Knative",description:"Deploying, running, and managing serverless, cloud-native applications",url:"https://github.com/syntasso/kratix-marketplace/tree/main/knative",logoUrl:"/img/marketplace/knative.svg",categories:["App Delivery"]},{name:"Redis",description:"An in-memory data structure store, used as a distributed, in-memory key\u2013value database, cache and message broke",url:"https://github.com/syntasso/kratix-marketplace/tree/main/redis",logoUrl:"/img/marketplace/redis.svg",categories:["Data"]},{name:"PostgreSQL",description:"SQL-compliant relational database management system ",url:"https://github.com/syntasso/promise-postgresql",logoUrl:"/img/marketplace/postgresql.svg",categories:["Data"]},{name:"Vault",description:"Identity-based secrets and encryption management system",url:"https://github.com/syntasso/kratix-marketplace/tree/main/vault",logoUrl:"/img/marketplace/vault.svg",categories:["Credentials"]},{name:"Jenkins",description:"Continuous integration/continuous delivery and deployment (CI/CD) automation software",url:"https://github.com/syntasso/kratix-marketplace/tree/main/jenkins",logoUrl:"/img/marketplace/jenkins.svg",categories:["CI/CD"]},{name:"ArgoCD",description:"Declarative continuous delivery tool",url:"https://github.com/syntasso/kratix-marketplace/tree/main/argocd-application",logoUrl:"/img/marketplace/argocd.svg",categories:["CI/CD","GitOps"]},{name:"Grafana / Prometheus",description:"Event monitoring and alerting using Prometheus, visualised in Grafana",url:"https://github.com/syntasso/promise-observability",logoUrl:"/img/marketplace/observability.svg",categories:["Monitoring","Metrics"]},{name:"Kafka",description:"Distributed event store and stream-processing platform",url:"https://github.com/syntasso/kratix-marketplace/tree/main/kafka",logoUrl:"/img/marketplace/kafka.svg",categories:["Messaging"]},{name:"Istio",description:"Service mesh, for observability, traffic management, security, and policy",url:"https://github.com/syntasso/kratix-marketplace/tree/main/istio",logoUrl:"/img/marketplace/istio.svg",categories:["Service Mesh"]},{name:"ElasticSearch",description:"Distributed, open search and analytics engine for all types of data",url:"https://github.com/syntasso/promise-elasticcloud",logoUrl:"/img/marketplace/elasticsearch.svg",categories:["Search"]},{name:"Namespace",description:"Provides Kubernetes Namespaces as-a-Service",url:"https://github.com/syntasso/kratix-marketplace/tree/main/namespace",logoUrl:"/img/marketplace/ns.svg",categories:["Kubernetes"]},{name:"NGINX Ingress Controller",description:"Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer",url:"https://github.com/syntasso/kratix-marketplace/tree/main/nginx-ingress",logoUrl:"/img/marketplace/nginx.svg",categories:["Networking"]},{name:"Dex",description:"A demo promise to showcase cluster authentication and authorization using OIDC as a service",url:"https://github.com/syntasso/kratix-marketplace/tree/main/dex-group-authentication",logoUrl:"/img/marketplace/dex.svg",categories:["Security"]},{name:"Slack",description:"Example of an API integration in a Kratix Promise pipeline, using the Slack API to send messages",url:"https://github.com/syntasso/kratix-marketplace/tree/main/slack",logoUrl:"/img/marketplace/slack.svg",categories:["Communication"]},{name:"Crossplane",description:"Orchestrate infrastructure across clouds",url:"https://github.com/syntasso/kratix-marketplace/tree/main/crossplane",logoUrl:"/img/marketplace/crossplane.svg",categories:["Infrastructure Provisioning"]},{name:"Waypoint",description:"Open source solution that provides a modern workflow for build, deploy, and release",url:"https://github.com/syntasso/promise-waypoint/tree/main",logoUrl:"/img/marketplace/waypoint.svg",categories:["App Delivery"]},{name:"Kubeflow Pipelines",description:"Kubeflow Pipelines is a platform for building and deploying portable, scalable machine learning (ML) workflows based on Docker containers",url:"https://github.com/syntasso/kratix-marketplace/tree/main/kubeflow-pipelines",logoUrl:"/img/marketplace/kubeflow-pipelines.svg",categories:["Machine Learning"]},{name:"cert-manager",description:"cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates",url:"https://github.com/syntasso/kratix-marketplace/tree/main/cert-manager",logoUrl:"/img/marketplace/cert-manager.svg",categories:["Security"]},{name:"Paved Path",description:"Example of a Promise delivering a 'Paved Path' with Knative and PostgreSQL.       Check the Compound Promises section in the documentation for       more information.",url:"https://github.com/syntasso/kratix/tree/main/samples/paved-path-demo/",logoUrl:"/img/marketplace/pavedpath.svg",example:!0,categories:["Example","Compound Promise"]},{name:"App-as-a-Service",description:"Example of a Promise delivering 'App-as-a-Service'.       Check the Compound Promises section in the documentation for       more information.",url:"https://github.com/syntasso/kratix/tree/main/demo/app-as-a-service",logoUrl:"/img/marketplace/app-as-a-service.svg",example:!0,categories:["Example","Compound Promise"]},{name:"Dapr",description:"Event-driven runtime that makes it easy for any developer to build resilient, stateless and stateful applications",url:"https://github.com/syntasso/kratix-marketplace/tree/main/dapr",logoUrl:"/img/marketplace/dapr.svg",categories:["Microservices","Event Driven"]},{name:"MongoDB",description:"Document-oriented NoSQL database",logoUrl:"/img/marketplace/mongodb.svg",available:!1,categories:["Data"]}];var n=a(6112),l=a(7116),c=a(9937),m=a(9974),p=a(3965),g=a(4267),u=a(3476),d=a(9527),h=a(9960),k=a(6010);const b=(0,d.ZP)("li")((e=>{let{theme:t}=e;return{margin:t.spacing(.5)}}));function v(e){let{title:t,style:a}=e;return r.createElement("div",{className:(0,k.Z)(s.banner,a)},r.createElement("h3",{className:s.bannerTitle},t))}function y(e){let{name:t,url:a,logoUrl:i,description:o,categories:n,available:l=!0,example:d=!1}=e;return r.createElement(c.Z,{className:(0,k.Z)(s.card,l?null:s.cardComingSoon)},r.createElement(m.Z,{href:a||"#",disabled:!l,target:"_blank",className:s.cardAction},r.createElement(p.Z,{component:"img",alt:t,image:i,title:t,className:s.logo}),r.createElement(g.Z,null,r.createElement("h2",{className:s.cardTitle},t),r.createElement("p",{className:s.cardDescription},o),r.createElement("ul",{className:s.categoriesList},n.map((e=>r.createElement(b,{key:e},r.createElement(u.Z,{variant:"outlined",label:e,className:s.chip}))))),l?null:r.createElement(v,{title:"Coming Soon",style:s.preview}),d?r.createElement(v,{title:"Example",style:s.example}):null)))}function f(e){return r.createElement(i.Z,{title:"Kratix Marketplace",description:"Use Kratix Marketplace to find your next Kratix Promise"},r.createElement("main",{className:s.main},r.createElement("header",{className:"text--center"},r.createElement("hgroup",null,r.createElement("h1",null,"Kratix Marketplace"),r.createElement("p",{className:"text--center"},"Community Promises for ",r.createElement(h.Z,{href:"/"},"Kratix"),", the framework for building platforms."))),r.createElement("div",{className:"root"},r.createElement(n.Z,{cellHeight:"auto",className:s.gridList,spacing:30,cols:(0,l.yJ)("xl",e.width)?4:(0,l.yJ)("lg",e.width)?3:(0,l.yJ)("md",e.width)?2:1},o.map((e=>r.createElement("div",{key:e.name},r.createElement(y,e)))))),r.createElement("div",{className:(0,k.Z)("text--center","margin-top--md",s.bottomText)},r.createElement("p",null,"Want to contribute a Promise to the Marketplace?",r.createElement(h.Z,{href:"/marketplace/contributing"},"Check out our guide.")),r.createElement("p",null,"Do you have any feedback? Did not find what you were looking for?",r.createElement(h.Z,{href:"https://github.com/syntasso/kratix-marketplace/issues/new/choose"},"Submit an issue for it on GitHub")))))}const x=(0,l.ZP)()(f)}}]);